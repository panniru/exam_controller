class ResultsController < ApplicationController
    load_resource :only => [:show, :update, :edit, :destroy, :new, :new_upload]
  authorize_resource

  def index
    page = params[:page].present? ? params[:page] : 1
    if params[:search].present?
      @results = Result.search(params[:search]).paginate(:page => 1)
    else
      @results = Result.all.order("roll_number DESC").paginate(:page => page)
    end
  end

  def create
    @result = Result.new(result_params)
    if @result.save
      flash.now[:success] = I18n.t :success, :scope => [:result, :create]
      render "show"
    else
      flash.now[:fail] = I18n.t :fail, :scope => [:result, :create]
      render "new"
    end
  end

  def update
    if @result.update(result_params)
      flash.now[:success] = I18n.t :success, :scope => [:result, :update]
      render "show"
    else
      flash.now[:fail] = I18n.t :fail, :scope => [:result, :update]
      render "edit"
    end
  end

  def destroy
    if @result.destroy
      flash.now[:success] = I18n.t :success, :scope => [:result, :destroy]
      redirect_to results_path
    else
      flash.now[:fail] = I18n.t :fail, :scope => [:result, :destroy]
      render "show"
    end
  end

  def result_upload
    @result_uploader = ResultsUploader.new
    respond_to do |format|
      format.html { render "new_upload"}
      format.xlsx { send_data @result_uploader.xls_template(col_sep: "\t") }
    end
  end

  def upload
    @result_uploader = ResultsUploader.new(params[:result_uploader])
    if @result_uploader.save
      flash[:success] = I18n.t :success, :scope => [:result, :upload]
      redirect_to results_path
    else
      render "new_upload"
    end
  end

  private

  def result_params
    params.require(:result).permit(:name, :dob, :joining_date, :parent_email, :father_name, :mother_name, :roll_number, :mobile_number)
  end

end
